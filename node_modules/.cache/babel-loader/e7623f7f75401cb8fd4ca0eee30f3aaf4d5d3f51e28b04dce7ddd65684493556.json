{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chesh\\\\OneDrive\\\\Desktop\\\\Million\\\\src\\\\Components\\\\Tasks.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// Create a Provider component\nexport const TasksProvider = ({\n  children\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  return /*#__PURE__*/_jsxDEV(TasksContext.Provider, {\n    value: {\n      tasks,\n      setTasks\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the TasksContext\n_s(TasksProvider, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n_c = TasksProvider;\nexport const useTasks = () => {\n  _s2();\n  return useContext(TasksContext);\n};\n_s2(useTasks, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nimport React, { useState, createContext, useContext } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tasks() {\n  _s3();\n  const TasksContext = /*#__PURE__*/createContext();\n  const initialItems = [];\n  const [items, setItems] = useState(initialItems);\n  const [newItem, setNewItem] = useState('');\n  const [newColor, setNewColor] = useState('');\n  const colors = [{\n    name: 'Blue',\n    value: '#80A7EF'\n  }, {\n    name: 'Pink',\n    value: '#ED97B4'\n  }, {\n    name: 'Peach',\n    value: '#F3BCA5'\n  }, {\n    name: 'Light Yellow',\n    value: '#FAE99E'\n  }, {\n    name: 'Yellow',\n    value: '#F0E08D'\n  }, {\n    name: 'Beige',\n    value: '#EBEBD3'\n  }, {\n    name: 'Light Olive',\n    value: '#C0C0AD'\n  }, {\n    name: 'Gray',\n    value: '#949487'\n  }, {\n    name: 'Dark Gray',\n    value: '#686861'\n  }, {\n    name: 'Black',\n    value: '#3C3C3B'\n  }];\n  const handleAddItem = () => {\n    if (newItem.trim() !== '' && newColor !== '') {\n      setItems([...items, {\n        name: newItem,\n        color: newColor\n      }]);\n      setNewItem('');\n      setNewColor('');\n    }\n  };\n  const handleRemoveItem = index => {\n    const updatedItems = [...items];\n    updatedItems.splice(index, 1);\n    setItems(updatedItems);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-container\",\n    children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        type: \"text\",\n        placeholder: \"Enter task name\",\n        value: newItem,\n        onChange: e => setNewItem(e.target.value),\n        className: \"task-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        value: newColor,\n        onChange: e => setNewColor(e.target.value),\n        className: \"color-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), colors.map((color, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: color.value,\n          children: color.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAddItem,\n        variant: \"outline-secondary\",\n        className: \"add-button\",\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        className: \"task-item\",\n        style: {\n          backgroundColor: item.color\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-danger\",\n            size: \"sm\",\n            onClick: () => handleRemoveItem(index),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 12\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 12\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s3(Tasks, \"BlymooFHkgnfwgqnEL5zcukOO8U=\");\n_c2 = Tasks;\nexport default Tasks;\n\n// import React, { useState } from 'react';\n// import ListGroup from 'react-bootstrap/ListGroup';\n// import Button from 'react-bootstrap/Button';\n// import Form from 'react-bootstrap/Form';\n// import InputGroup from 'react-bootstrap/InputGroup';\n// import FormControl from 'react-bootstrap/FormControl';\n\n// function Tasks({ items, onAddItem }) {\n//   const [newItem, setNewItem] = useState('');\n//   const [newColor, setNewColor] = useState('');\n\n//   const colors = [\n//     { name: 'Blue', value: '#80A7EF' },\n//     { name: 'Pink', value: '#ED97B4' },\n//     { name: 'Peach', value: '#F3BCA5' },\n//     { name: 'Light Yellow', value: '#FAE99E' },\n//     { name: 'Yellow', value: '#F0E08D' },\n//     { name: 'Beige', value: '#EBEBD3' },\n//     { name: 'Light Olive', value: '#C0C0AD' },\n//     { name: 'Gray', value: '#949487' },\n//     { name: 'Dark Gray', value: '#686861' },\n//     { name: 'Black', value: '#3C3C3B' }\n//   ];\n\n//   const handleAddItem = () => {\n//     if (newItem.trim() !== '' && newColor !== '') {\n//       onAddItem({ name: newItem, color: newColor });\n//       setNewItem('');\n//       setNewColor('');\n//     }\n//   };\n\n//   return (\n//     <div className=\"tasks-container\">\n//       <InputGroup className=\"mb-3\">\n//         <FormControl\n//           type=\"text\"\n//           placeholder=\"Enter task name\"\n//           value={newItem}\n//           onChange={(e) => setNewItem(e.target.value)}\n//           className=\"task-input\"\n//         />\n//         <Form.Control\n//           as=\"select\"\n//           value={newColor}\n//           onChange={(e) => setNewColor(e.target.value)}\n//           className=\"color-select\"\n//         >\n//           <option value=\"\">Select color</option>\n//           {colors.map((color, index) => (\n//             <option key={index} value={color.value}>\n//               {color.name}\n//             </option>\n//           ))}\n//         </Form.Control>\n//         <Button onClick={handleAddItem} variant=\"outline-secondary\" className=\"add-button\">Add Item</Button>\n//       </InputGroup>\n//       <ListGroup>\n//         {items.map((item, index) => (\n//           <ListGroup.Item key={index} className=\"task-item\" style={{ backgroundColor: item.color }}>\n//             {item.name}\n//           </ListGroup.Item>\n//         ))}\n//       </ListGroup>\n//     </div>\n//   );\n// }\n\n// export default Tasks;\n\n// import React, { useState } from 'react';\n// import ListGroup from 'react-bootstrap/ListGroup';\n// import Button from 'react-bootstrap/Button';\n// import Form from 'react-bootstrap/Form';\n// import InputGroup from 'react-bootstrap/InputGroup';\n// import FormControl from 'react-bootstrap/FormControl';\n\n// function Tasks() {\n//   const initialItems = [];\n\n//   const [items, setItems] = useState(initialItems);\n//   const [newItem, setNewItem] = useState('');\n//   const [newColor, setNewColor] = useState('');\n\n//   const colors = [\n//     { name: 'Blue', value: '#80A7EF' },\n//     { name: 'Pink', value: '#ED97B4' },\n//     { name: 'Peach', value: '#F3BCA5' },\n//     { name: 'Light Yellow', value: '#FAE99E' },\n//     { name: 'Yellow', value: '#F0E08D' },\n//     { name: 'Beige', value: '#EBEBD3' },\n//     { name: 'Light Olive', value: '#C0C0AD' },\n//     { name: 'Gray', value: '#949487' },\n//     { name: 'Dark Gray', value: '#686861' },\n//     { name: 'Black', value: '#3C3C3B' }\n//   ];\n\n//   const handleAddItem = () => {\n//     if (newItem.trim() !== '' && newColor !== '') {\n//       setItems([...items, { name: newItem, color: newColor }]);\n//       setNewItem(''); // Clear the task input field after adding the item\n//       setNewColor(''); // Clear the color selection after adding the item\n//     }\n//   };\n\n//   return (\n//     <div className=\"tasks-container\">\n//       <InputGroup className=\"mb-3\">\n//         <FormControl\n//           type=\"text\"\n//           placeholder=\"Enter task name\"\n//           value={newItem}\n//           onChange={(e) => setNewItem(e.target.value)}\n//           className=\"task-input\"\n//         />\n//         <Form.Control\n//           as=\"select\"\n//           value={newColor}\n//           onChange={(e) => setNewColor(e.target.value)}\n//           className=\"color-select\"\n//         >\n//           <option value=\"\"  >Color</option>\n//           {colors.map((color, index) => (\n//             <option key={index} value={color.value}>\n//               {color.name}\n//             </option>\n//           ))}\n//         </Form.Control>\n//         <Button onClick={handleAddItem} variant=\"outline-secondary\" className=\"add-button\">Add Item</Button>\n//       </InputGroup>\n//       <ListGroup>\n//         {items.map((item, index) => (\n//           <ListGroup.Item key={index} className=\"task-item\" style={{ backgroundColor: item.color }}>\n//             {item.name}\n//           </ListGroup.Item>\n//         ))}\n//       </ListGroup>\n//     </div>\n//   );\n// }\n\n// export default Tasks;\n\n/* {\r\ncolor pallete:\r\n1446A0\r\nDB3069\r\nE88358\r\nF5D547\r\nF0E08D\r\nEBEBD3\r\nC0C0AD\r\n949487\r\n686861\r\n3C3C3B\r\n}*/\nvar _c, _c2;\n$RefreshReg$(_c, \"TasksProvider\");\n$RefreshReg$(_c2, \"Tasks\");","map":{"version":3,"names":["TasksProvider","children","_s","tasks","setTasks","useState","_jsxDEV","TasksContext","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTasks","_s2","useContext","React","createContext","ListGroup","Button","Form","InputGroup","FormControl","jsxDEV","Tasks","_s3","initialItems","items","setItems","newItem","setNewItem","newColor","setNewColor","colors","name","handleAddItem","trim","color","handleRemoveItem","index","updatedItems","splice","className","type","placeholder","onChange","e","target","Control","as","map","onClick","variant","item","Item","style","backgroundColor","size","_c2","$RefreshReg$"],"sources":["C:/Users/chesh/OneDrive/Desktop/Million/src/Components/Tasks.js"],"sourcesContent":["\r\n\r\n\r\n// Create a Provider component\r\nexport const TasksProvider = ({ children }) => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  return (\r\n    <TasksContext.Provider value={{ tasks, setTasks }}>\r\n      {children}\r\n    </TasksContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the TasksContext\r\nexport const useTasks = () => {\r\n  return useContext(TasksContext);\r\n};\r\n\r\n\r\nimport React, { useState, createContext,useContext } from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\n\r\nfunction Tasks() {\r\n  const TasksContext = createContext();\r\n\r\n  const initialItems = [];\r\n\r\n  const [items, setItems] = useState(initialItems);\r\n  const [newItem, setNewItem] = useState('');\r\n  const [newColor, setNewColor] = useState('');\r\n\r\n  const colors = [\r\n    { name: 'Blue', value: '#80A7EF' },\r\n    { name: 'Pink', value: '#ED97B4' },\r\n    { name: 'Peach', value: '#F3BCA5' },\r\n    { name: 'Light Yellow', value: '#FAE99E' },\r\n    { name: 'Yellow', value: '#F0E08D' },\r\n    { name: 'Beige', value: '#EBEBD3' },\r\n    { name: 'Light Olive', value: '#C0C0AD' },\r\n    { name: 'Gray', value: '#949487' },\r\n    { name: 'Dark Gray', value: '#686861' },\r\n    { name: 'Black', value: '#3C3C3B' }\r\n  ];\r\n\r\n  const handleAddItem = () => {\r\n    if (newItem.trim() !== '' && newColor !== '') {\r\n      setItems([...items, { name: newItem, color: newColor }]);\r\n      setNewItem('');\r\n      setNewColor('');\r\n    }\r\n  };\r\n\r\n  const handleRemoveItem = (index) => {\r\n    const updatedItems = [...items];\r\n    updatedItems.splice(index, 1);\r\n    setItems(updatedItems);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks-container\">\r\n      <InputGroup className=\"mb-3\">\r\n        <FormControl\r\n          type=\"text\"\r\n          placeholder=\"Enter task name\"\r\n          value={newItem}\r\n          onChange={(e) => setNewItem(e.target.value)}\r\n          className=\"task-input\"\r\n        />\r\n        <Form.Control\r\n          as=\"select\"\r\n          value={newColor}\r\n          onChange={(e) => setNewColor(e.target.value)}\r\n          className=\"color-select\"\r\n        >\r\n          <option value=\"\">Color</option>\r\n          {colors.map((color, index) => (\r\n            <option key={index} value={color.value}>\r\n              {color.name}\r\n            </option>\r\n          ))}\r\n        </Form.Control>\r\n        <Button onClick={handleAddItem} variant=\"outline-secondary\" className=\"add-button\">Add Item</Button>\r\n      </InputGroup>\r\n      <ListGroup>\r\n        {items.map((item, index) => (\r\n           <ListGroup.Item key={index} className=\"task-item\" style={{ backgroundColor: item.color }}>\r\n           <div className=\"d-flex justify-content-between align-items-center\">\r\n             <span>{item.name}</span>\r\n             <Button variant=\"outline-danger\" size=\"sm\" onClick={() => handleRemoveItem(index)}>X</Button>\r\n           </div>\r\n         </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tasks;\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import ListGroup from 'react-bootstrap/ListGroup';\r\n// import Button from 'react-bootstrap/Button';\r\n// import Form from 'react-bootstrap/Form';\r\n// import InputGroup from 'react-bootstrap/InputGroup';\r\n// import FormControl from 'react-bootstrap/FormControl';\r\n\r\n// function Tasks({ items, onAddItem }) {\r\n//   const [newItem, setNewItem] = useState('');\r\n//   const [newColor, setNewColor] = useState('');\r\n\r\n//   const colors = [\r\n//     { name: 'Blue', value: '#80A7EF' },\r\n//     { name: 'Pink', value: '#ED97B4' },\r\n//     { name: 'Peach', value: '#F3BCA5' },\r\n//     { name: 'Light Yellow', value: '#FAE99E' },\r\n//     { name: 'Yellow', value: '#F0E08D' },\r\n//     { name: 'Beige', value: '#EBEBD3' },\r\n//     { name: 'Light Olive', value: '#C0C0AD' },\r\n//     { name: 'Gray', value: '#949487' },\r\n//     { name: 'Dark Gray', value: '#686861' },\r\n//     { name: 'Black', value: '#3C3C3B' }\r\n//   ];\r\n\r\n//   const handleAddItem = () => {\r\n//     if (newItem.trim() !== '' && newColor !== '') {\r\n//       onAddItem({ name: newItem, color: newColor });\r\n//       setNewItem('');\r\n//       setNewColor('');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"tasks-container\">\r\n//       <InputGroup className=\"mb-3\">\r\n//         <FormControl\r\n//           type=\"text\"\r\n//           placeholder=\"Enter task name\"\r\n//           value={newItem}\r\n//           onChange={(e) => setNewItem(e.target.value)}\r\n//           className=\"task-input\"\r\n//         />\r\n//         <Form.Control\r\n//           as=\"select\"\r\n//           value={newColor}\r\n//           onChange={(e) => setNewColor(e.target.value)}\r\n//           className=\"color-select\"\r\n//         >\r\n//           <option value=\"\">Select color</option>\r\n//           {colors.map((color, index) => (\r\n//             <option key={index} value={color.value}>\r\n//               {color.name}\r\n//             </option>\r\n//           ))}\r\n//         </Form.Control>\r\n//         <Button onClick={handleAddItem} variant=\"outline-secondary\" className=\"add-button\">Add Item</Button>\r\n//       </InputGroup>\r\n//       <ListGroup>\r\n//         {items.map((item, index) => (\r\n//           <ListGroup.Item key={index} className=\"task-item\" style={{ backgroundColor: item.color }}>\r\n//             {item.name}\r\n//           </ListGroup.Item>\r\n//         ))}\r\n//       </ListGroup>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Tasks;\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import ListGroup from 'react-bootstrap/ListGroup';\r\n// import Button from 'react-bootstrap/Button';\r\n// import Form from 'react-bootstrap/Form';\r\n// import InputGroup from 'react-bootstrap/InputGroup';\r\n// import FormControl from 'react-bootstrap/FormControl';\r\n\r\n// function Tasks() {\r\n//   const initialItems = [];\r\n\r\n//   const [items, setItems] = useState(initialItems);\r\n//   const [newItem, setNewItem] = useState('');\r\n//   const [newColor, setNewColor] = useState('');\r\n\r\n//   const colors = [\r\n//     { name: 'Blue', value: '#80A7EF' },\r\n//     { name: 'Pink', value: '#ED97B4' },\r\n//     { name: 'Peach', value: '#F3BCA5' },\r\n//     { name: 'Light Yellow', value: '#FAE99E' },\r\n//     { name: 'Yellow', value: '#F0E08D' },\r\n//     { name: 'Beige', value: '#EBEBD3' },\r\n//     { name: 'Light Olive', value: '#C0C0AD' },\r\n//     { name: 'Gray', value: '#949487' },\r\n//     { name: 'Dark Gray', value: '#686861' },\r\n//     { name: 'Black', value: '#3C3C3B' }\r\n//   ];\r\n\r\n//   const handleAddItem = () => {\r\n//     if (newItem.trim() !== '' && newColor !== '') {\r\n//       setItems([...items, { name: newItem, color: newColor }]);\r\n//       setNewItem(''); // Clear the task input field after adding the item\r\n//       setNewColor(''); // Clear the color selection after adding the item\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"tasks-container\">\r\n//       <InputGroup className=\"mb-3\">\r\n//         <FormControl\r\n//           type=\"text\"\r\n//           placeholder=\"Enter task name\"\r\n//           value={newItem}\r\n//           onChange={(e) => setNewItem(e.target.value)}\r\n//           className=\"task-input\"\r\n//         />\r\n//         <Form.Control\r\n//           as=\"select\"\r\n//           value={newColor}\r\n//           onChange={(e) => setNewColor(e.target.value)}\r\n//           className=\"color-select\"\r\n//         >\r\n//           <option value=\"\"  >Color</option>\r\n//           {colors.map((color, index) => (\r\n//             <option key={index} value={color.value}>\r\n//               {color.name}\r\n//             </option>\r\n//           ))}\r\n//         </Form.Control>\r\n//         <Button onClick={handleAddItem} variant=\"outline-secondary\" className=\"add-button\">Add Item</Button>\r\n//       </InputGroup>\r\n//       <ListGroup>\r\n//         {items.map((item, index) => (\r\n//           <ListGroup.Item key={index} className=\"task-item\" style={{ backgroundColor: item.color }}>\r\n//             {item.name}\r\n//           </ListGroup.Item>\r\n//         ))}\r\n//       </ListGroup>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Tasks;\r\n\r\n/* {\r\ncolor pallete:\r\n1446A0\r\nDB3069\r\nE88358\r\nF5D547\r\nF0E08D\r\nEBEBD3\r\nC0C0AD\r\n949487\r\n686861\r\n3C3C3B\r\n}*/"],"mappings":"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M;YAACiC,OAAO,EAAC,gBAAgB;YAACK,IAAI,EAAC,IAAI;YAACN,OAAO,EAAEA,CAAA,KAAMb,gBAAgB,CAACC,KAAK,CAAE;YAAAxC,QAAA,EAAC;UAAC;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1F;MAAC,GAJe4B,KAAK;QAAA/B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKZ,CAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAACc,GAAA,CAzEQD,KAAK;AAAAkC,GAAA,GAALlC,KAAK;AA2Ed,eAAeA,KAAK;;AAKpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,IAAAZ,EAAA,EAAA8C,GAAA;AAAAC,YAAA,CAAA/C,EAAA;AAAA+C,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}