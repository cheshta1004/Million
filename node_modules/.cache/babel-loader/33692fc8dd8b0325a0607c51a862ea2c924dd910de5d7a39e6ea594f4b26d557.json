{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chesh\\\\OneDrive\\\\Desktop\\\\Million\\\\src\\\\Components\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tasks({\n  items,\n  onAddItem\n}) {\n  _s();\n  const [newItem, setNewItem] = useState('');\n  const [newColor, setNewColor] = useState('');\n  const colors = [{\n    name: 'Blue',\n    value: '#80A7EF'\n  }, {\n    name: 'Pink',\n    value: '#ED97B4'\n  }, {\n    name: 'Peach',\n    value: '#F3BCA5'\n  }, {\n    name: 'Light Yellow',\n    value: '#FAE99E'\n  }, {\n    name: 'Yellow',\n    value: '#F0E08D'\n  }, {\n    name: 'Beige',\n    value: '#EBEBD3'\n  }, {\n    name: 'Light Olive',\n    value: '#C0C0AD'\n  }, {\n    name: 'Gray',\n    value: '#949487'\n  }, {\n    name: 'Dark Gray',\n    value: '#686861'\n  }, {\n    name: 'Black',\n    value: '#3C3C3B'\n  }];\n  const handleAddItem = () => {\n    if (newItem.trim() !== '' && newColor !== '') {\n      onAddItem({\n        name: newItem,\n        color: newColor\n      });\n      setNewItem('');\n      setNewColor('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-container\",\n    children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        type: \"text\",\n        placeholder: \"Enter task name\",\n        value: newItem,\n        onChange: e => setNewItem(e.target.value),\n        className: \"task-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        value: newColor,\n        onChange: e => setNewColor(e.target.value),\n        className: \"color-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), colors.map((color, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: color.value,\n          children: color.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAddItem,\n        variant: \"outline-secondary\",\n        className: \"add-button\",\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        className: \"task-item\",\n        style: {\n          backgroundColor: item.color\n        },\n        children: item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Tasks, \"QeWy0bCF6e3ff9vSkDuaB+CdJJo=\");\n_c = Tasks;\nexport default Tasks;\n\n// import React, { useState } from 'react';\n// import ListGroup from 'react-bootstrap/ListGroup';\n// import Button from 'react-bootstrap/Button';\n// import Form from 'react-bootstrap/Form';\n// import InputGroup from 'react-bootstrap/InputGroup';\n// import FormControl from 'react-bootstrap/FormControl';\n\n// function Tasks() {\n//   const initialItems = [];\n\n//   const [items, setItems] = useState(initialItems);\n//   const [newItem, setNewItem] = useState('');\n//   const [newColor, setNewColor] = useState('');\n\n//   const colors = [\n//     { name: 'Blue', value: '#80A7EF' },\n//     { name: 'Pink', value: '#ED97B4' },\n//     { name: 'Peach', value: '#F3BCA5' },\n//     { name: 'Light Yellow', value: '#FAE99E' },\n//     { name: 'Yellow', value: '#F0E08D' },\n//     { name: 'Beige', value: '#EBEBD3' },\n//     { name: 'Light Olive', value: '#C0C0AD' },\n//     { name: 'Gray', value: '#949487' },\n//     { name: 'Dark Gray', value: '#686861' },\n//     { name: 'Black', value: '#3C3C3B' }\n//   ];\n\n//   const handleAddItem = () => {\n//     if (newItem.trim() !== '' && newColor !== '') {\n//       setItems([...items, { name: newItem, color: newColor }]);\n//       setNewItem(''); // Clear the task input field after adding the item\n//       setNewColor(''); // Clear the color selection after adding the item\n//     }\n//   };\n\n//   return (\n//     <div className=\"tasks-container\">\n//       <InputGroup className=\"mb-3\">\n//         <FormControl\n//           type=\"text\"\n//           placeholder=\"Enter task name\"\n//           value={newItem}\n//           onChange={(e) => setNewItem(e.target.value)}\n//           className=\"task-input\"\n//         />\n//         <Form.Control\n//           as=\"select\"\n//           value={newColor}\n//           onChange={(e) => setNewColor(e.target.value)}\n//           className=\"color-select\"\n//         >\n//           <option value=\"\">Select color</option>\n//           {colors.map((color, index) => (\n//             <option key={index} value={color.value}>\n//               {color.name}\n//             </option>\n//           ))}\n//         </Form.Control>\n//         <Button onClick={handleAddItem} variant=\"outline-secondary\" className=\"add-button\">Add Item</Button>\n//       </InputGroup>\n//       <ListGroup>\n//         {items.map((item, index) => (\n//           <ListGroup.Item key={index} className=\"task-item\" style={{ backgroundColor: item.color }}>\n//             {item.name}\n//           </ListGroup.Item>\n//         ))}\n//       </ListGroup>\n//     </div>\n//   );\n// }\n\n// export default Tasks;\n\n/* {\r\ncolor pallete:\r\n1446A0\r\nDB3069\r\nE88358\r\nF5D547\r\nF0E08D\r\nEBEBD3\r\nC0C0AD\r\n949487\r\n686861\r\n3C3C3B\r\n}*/\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","ListGroup","Button","Form","InputGroup","FormControl","jsxDEV","_jsxDEV","Tasks","items","onAddItem","_s","newItem","setNewItem","newColor","setNewColor","colors","name","value","handleAddItem","trim","color","className","children","type","placeholder","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","Control","as","map","index","onClick","variant","item","Item","style","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/chesh/OneDrive/Desktop/Million/src/Components/Tasks.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\n\r\nfunction Tasks({ items, onAddItem }) {\r\n  const [newItem, setNewItem] = useState('');\r\n  const [newColor, setNewColor] = useState('');\r\n\r\n  const colors = [\r\n    { name: 'Blue', value: '#80A7EF' },\r\n    { name: 'Pink', value: '#ED97B4' },\r\n    { name: 'Peach', value: '#F3BCA5' },\r\n    { name: 'Light Yellow', value: '#FAE99E' },\r\n    { name: 'Yellow', value: '#F0E08D' },\r\n    { name: 'Beige', value: '#EBEBD3' },\r\n    { name: 'Light Olive', value: '#C0C0AD' },\r\n    { name: 'Gray', value: '#949487' },\r\n    { name: 'Dark Gray', value: '#686861' },\r\n    { name: 'Black', value: '#3C3C3B' }\r\n  ];\r\n\r\n  const handleAddItem = () => {\r\n    if (newItem.trim() !== '' && newColor !== '') {\r\n      onAddItem({ name: newItem, color: newColor });\r\n      setNewItem('');\r\n      setNewColor('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks-container\">\r\n      <InputGroup className=\"mb-3\">\r\n        <FormControl\r\n          type=\"text\"\r\n          placeholder=\"Enter task name\"\r\n          value={newItem}\r\n          onChange={(e) => setNewItem(e.target.value)}\r\n          className=\"task-input\"\r\n        />\r\n        <Form.Control\r\n          as=\"select\"\r\n          value={newColor}\r\n          onChange={(e) => setNewColor(e.target.value)}\r\n          className=\"color-select\"\r\n        >\r\n          <option value=\"\">Select color</option>\r\n          {colors.map((color, index) => (\r\n            <option key={index} value={color.value}>\r\n              {color.name}\r\n            </option>\r\n          ))}\r\n        </Form.Control>\r\n        <Button onClick={handleAddItem} variant=\"outline-secondary\" className=\"add-button\">Add Item</Button>\r\n      </InputGroup>\r\n      <ListGroup>\r\n        {items.map((item, index) => (\r\n          <ListGroup.Item key={index} className=\"task-item\" style={{ backgroundColor: item.color }}>\r\n            {item.name}\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tasks;\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import ListGroup from 'react-bootstrap/ListGroup';\r\n// import Button from 'react-bootstrap/Button';\r\n// import Form from 'react-bootstrap/Form';\r\n// import InputGroup from 'react-bootstrap/InputGroup';\r\n// import FormControl from 'react-bootstrap/FormControl';\r\n\r\n// function Tasks() {\r\n//   const initialItems = [];\r\n\r\n//   const [items, setItems] = useState(initialItems);\r\n//   const [newItem, setNewItem] = useState('');\r\n//   const [newColor, setNewColor] = useState('');\r\n\r\n//   const colors = [\r\n//     { name: 'Blue', value: '#80A7EF' },\r\n//     { name: 'Pink', value: '#ED97B4' },\r\n//     { name: 'Peach', value: '#F3BCA5' },\r\n//     { name: 'Light Yellow', value: '#FAE99E' },\r\n//     { name: 'Yellow', value: '#F0E08D' },\r\n//     { name: 'Beige', value: '#EBEBD3' },\r\n//     { name: 'Light Olive', value: '#C0C0AD' },\r\n//     { name: 'Gray', value: '#949487' },\r\n//     { name: 'Dark Gray', value: '#686861' },\r\n//     { name: 'Black', value: '#3C3C3B' }\r\n//   ];\r\n\r\n//   const handleAddItem = () => {\r\n//     if (newItem.trim() !== '' && newColor !== '') {\r\n//       setItems([...items, { name: newItem, color: newColor }]);\r\n//       setNewItem(''); // Clear the task input field after adding the item\r\n//       setNewColor(''); // Clear the color selection after adding the item\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"tasks-container\">\r\n//       <InputGroup className=\"mb-3\">\r\n//         <FormControl\r\n//           type=\"text\"\r\n//           placeholder=\"Enter task name\"\r\n//           value={newItem}\r\n//           onChange={(e) => setNewItem(e.target.value)}\r\n//           className=\"task-input\"\r\n//         />\r\n//         <Form.Control\r\n//           as=\"select\"\r\n//           value={newColor}\r\n//           onChange={(e) => setNewColor(e.target.value)}\r\n//           className=\"color-select\"\r\n//         >\r\n//           <option value=\"\">Select color</option>\r\n//           {colors.map((color, index) => (\r\n//             <option key={index} value={color.value}>\r\n//               {color.name}\r\n//             </option>\r\n//           ))}\r\n//         </Form.Control>\r\n//         <Button onClick={handleAddItem} variant=\"outline-secondary\" className=\"add-button\">Add Item</Button>\r\n//       </InputGroup>\r\n//       <ListGroup>\r\n//         {items.map((item, index) => (\r\n//           <ListGroup.Item key={index} className=\"task-item\" style={{ backgroundColor: item.color }}>\r\n//             {item.name}\r\n//           </ListGroup.Item>\r\n//         ))}\r\n//       </ListGroup>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Tasks;\r\n\r\n/* {\r\ncolor pallete:\r\n1446A0\r\nDB3069\r\nE88358\r\nF5D547\r\nF0E08D\r\nEBEBD3\r\nC0C0AD\r\n949487\r\n686861\r\n3C3C3B\r\n}*/"],"mappings":"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AAsB,QAAA,EACPd,KAAK,CAAC0B,GAAG,CAAC,CAACI,IAAI,EAAEH,KAAK,kBACrB7B,OAAA,CAACN,SAAS,CAACuC,IAAI;QAAalB,SAAS,EAAC,WAAW;QAACmB,KAAK,EAAE;UAAEC,eAAe,EAAEH,IAAI,CAAClB;QAAM,CAAE;QAAAE,QAAA,EACtFgB,IAAI,CAACtB;MAAI,GADSmB,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAACrB,EAAA,CA3DQH,KAAK;AAAAmC,EAAA,GAALnC,KAAK;AA6Dd,eAAeA,KAAK;;AAKpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}